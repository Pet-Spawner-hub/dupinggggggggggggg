local player = game.Players.LocalPlayer

-- GUI Setup
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.Name = "PetDupeUI"
screenGui.ResetOnSpawn = false

-- Duplicate Button
local duplicateButton = Instance.new("TextButton", screenGui)
duplicateButton.Name = "DuplicateButton"
duplicateButton.Size = UDim2.new(0,160,0,50)
duplicateButton.Position = UDim2.new(0.5,-80,0.85,0)
duplicateButton.BackgroundColor3 = Color3.new(0,0,0)
duplicateButton.TextColor3 = Color3.new(1,1,1)
duplicateButton.Font = Enum.Font.SourceSansBold
duplicateButton.TextSize = 20
duplicateButton.Text = "Duplicate"
duplicateButton.Draggable = true
duplicateButton.Selectable = true
duplicateButton.Active = true

-- Message Label
local msgLabel = Instance.new("TextLabel", screenGui)
msgLabel.Size = UDim2.new(0,300,0,40)
msgLabel.Position = UDim2.new(0.5,-150,0.75,0)
msgLabel.BackgroundColor3 = Color3.new(0,0,0)
msgLabel.TextColor3 = Color3.new(1,1,1)
msgLabel.Font = Enum.Font.SourceSansBold
msgLabel.TextSize = 20
msgLabel.Visible = false

-- Fake Inventory UI
local invFrame = Instance.new("Frame", screenGui)
invFrame.Name = "FakeInventoryUI"
invFrame.Size = UDim2.new(0,320,0,200)
invFrame.Position = UDim2.new(0.02,0,0.65,0)
invFrame.BackgroundColor3 = Color3.fromRGB(40,40,40)
invFrame.BorderSizePixel = 2

local uiGrid = Instance.new("UIGridLayout", invFrame)
uiGrid.CellSize = UDim2.new(0,80,0,80)
uiGrid.CellPadding = UDim2.new(0,10,0,10)

-- Storage Folder
local fakeInventoryFolder = Instance.new("Folder", player)
fakeInventoryFolder.Name = "FakeInventory"
local visualClonesFolder = Instance.new("Folder", workspace)
visualClonesFolder.Name = "VisualPetClones"

-- Helper: get held pet inside equipped Tool
local function getHeldPet()
    local char = player.Character or player.CharacterAdded:Wait()
    local tool = char:FindFirstChildOfClass("Tool")
    if not tool then return nil, nil end
    local pet = tool:FindFirstChildWhichIsA("Model") or tool:FindFirstChild("Pet")
    return pet, tool
end

-- Helper: add a tool into FakeInventory UI/list
local function addToInventoryUI(tool)
    local btn = Instance.new("TextButton", invFrame)
    btn.Size = UDim2.new(0,80,0,80)
    btn.Text = tool.Name
    btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 14

    btn.MouseButton1Click:Connect(function()
        tool.Parent = player.Backpack
    end)
end

-- Duplicate and make placeable pet
local function duplicatePet()
    local petModel, heldTool = getHeldPet()
    if not petModel then
        msgLabel.Text = "❌ Hold a pet tool!"
        msgLabel.Visible = true
        task.delay(2, function() msgLabel.Visible = false end)
        return
    end

    msgLabel.Text = "✅ Duplicating..."
    msgLabel.Visible = true

    task.delay(1, function()
        msgLabel.Visible = false

        -- Clone pet visually in workspace
        local visualClone = petModel:Clone()
        visualClone.Name = petModel.Name .. "_Clone"
        visualClone.Parent = visualClonesFolder

        -- Copy values (Age, Weight, etc.)
        for _, val in ipairs(petModel:GetChildren()) do
            if val:IsA("ValueBase") then
                val:Clone().Parent = visualClone
            end
        end

        -- Create functional tool for inventory and placement
        local toolClone = Instance.new("Tool")
        toolClone.Name = petModel.Name .. "_Clone"
        toolClone.RequiresHandle = false
        local petInTool = petModel:Clone()
        petInTool.Parent = toolClone

        -- Add support for placing into garden
        toolClone.Equipped:Connect(function()
            local char = player.Character or player.CharacterAdded:Wait()
            if petInTool.PrimaryPart then
                petInTool.Parent = char
            end
        end)

        toolClone.Unequipped:Connect(function()
            petInTool.Parent = toolClone
        end)

        toolClone.Parent = fakeInventoryFolder
        addToInventoryUI(toolClone)
    end)
end

-- Input handlers
duplicateButton.MouseButton1Click:Connect(duplicatePet)
duplicateButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        duplicatePet()
    end
end)
