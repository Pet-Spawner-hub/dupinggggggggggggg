-- Core services & player references
local Players      = game:GetService("Players")
local RunService   = game:GetService("RunService")
local uis          = game:GetService("UserInputService")
local player       = Players.LocalPlayer
local character    = player.Character or player.CharacterAdded:Wait()
local camera       = workspace.CurrentCamera

-- GUI setup
local playerGui    = player:WaitForChild("PlayerGui")
local screenGui    = Instance.new("ScreenGui")
screenGui.Name     = "PetDupeGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent   = playerGui

local message = Instance.new("TextLabel")
message.Size          = UDim2.new(0, 300, 0, 40)
message.Position      = UDim2.new(0.5, -150, 0.55, 0)
message.BackgroundColor3 = Color3.new(0, 0, 0)
message.TextColor3   = Color3.new(1, 1, 1)
message.Font          = Enum.Font.SourceSansBold
message.TextSize      = 20
message.Visible       = false
message.Parent        = screenGui

local dupeButton = Instance.new("TextButton")
dupeButton.Name         = "DuplicateButton"
dupeButton.Size         = UDim2.new(0, 160, 0, 50)
dupeButton.Position     = UDim2.new(0.5, -80, 0.6, 0)
dupeButton.BackgroundColor3 = Color3.new(0, 0, 0)
dupeButton.TextColor3   = Color3.new(1, 1, 1)
dupeButton.Font         = Enum.Font.SourceSansBold
dupeButton.TextSize     = 22
dupeButton.Text         = "Duplicate"
dupeButton.Parent       = screenGui
dupeButton.Draggable    = true

-- Folder for placed pets
local placedFolder = workspace:FindFirstChild("PlacedPets")
if not placedFolder then
    placedFolder = Instance.new("Folder", workspace)
    placedFolder.Name = "PlacedPets"
end

-- Utility: get the currently held pet tool
local function getHeldTool()
    local char = player.Character
    if not char then return end
    return char:FindFirstChildOfClass("Tool")
end

-- Utility: display temporary messages
local function flashMessage(txt, sec)
    message.Text    = txt
    message.Visible = true
    task.delay(sec or 2, function()
        message.Visible = false
    end)
end

-- Behavior component: stats + wandering/following
local function setupPetBehavior(pet)
    if not pet.PrimaryPart then return end
    -- Stats billboard
    local cd = pet.PrimaryPart:FindFirstChildOfClass("ClickDetector")
    if not cd then
        cd = Instance.new("ClickDetector", pet.PrimaryPart)
        cd.MaxActivationDistance = 20
    end

    local age    = pet:FindFirstChild("Age")
    local weight = pet:FindFirstChild("Weight")

    local billboard = Instance.new("BillboardGui", pet.PrimaryPart)
    billboard.Name         = "StatsGui"
    billboard.AlwaysOnTop  = true
    billboard.Size         = UDim2.new(0, 150, 0, 40)
    billboard.StudsOffset  = Vector3.new(0, 3, 0)
    billboard.Enabled      = false

    local label = Instance.new("TextLabel", billboard)
    label.Size              = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3        = Color3.new(1, 1, 1)
    label.Font             = Enum.Font.SourceSansBold
    label.TextSize         = 14
    label.Text             = "Age: " .. (age and age.Value or "N/A") ..
                              " | Weight: " .. (weight and weight.Value or "N/A")

    cd.MouseClick:Connect(function()
        billboard.Enabled = not billboard.Enabled
    end)

    -- Movement: wandering + follow
    local function moveTo(pt)
        if not pet.PrimaryPart then return end
        local bv = Instance.new("BodyVelocity")
        bv.MaxForce   = Vector3.new(1e5, 0, 1e5)
        bv.Velocity   = (pt - pet.PrimaryPart.Position).Unit * 8
        bv.Parent     = pet.PrimaryPart

        local conn
        conn = RunService.Stepped:Connect(function()
            if not pet.PrimaryPart or (pet.PrimaryPart.Position - pt).Magnitude < 2 then
                bv:Destroy()
                conn:Disconnect()
            end
        end)
    end

    spawn(function()
        while pet and pet.PrimaryPart and pet.Parent do
            local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if not root then break end
            local dist = (root.Position - pet.PrimaryPart.Position).Magnitude
            if dist < 20 then
                moveTo(root.Position + Vector3.new(0, 0, -3))
            else
                local origin = pet.PrimaryPart.Position
                local x = math.random(-10, 10)
                local z = math.random(-10, 10)
                moveTo(origin + Vector3.new(x, 0, z))
            end
            wait(math.random(3, 6))
        end
    end)
end

-- Placement handler
local function placePetOnClick(petModel)
    if not petModel or not petModel.PrimaryPart then
        warn("Invalid pet model.")
        return
    end
    flashMessage("Click ground to place pet...", 3)

    local conn
    conn = uis.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local ray = camera:ScreenPointToRay(uis:GetMouseLocation())
            local res = workspace:Raycast(ray.Origin, ray.Direction * 200, RaycastParams.new())
            if res then
                petModel.Parent = placedFolder
                local offset = petModel.PrimaryPart.Size.Y / 2
                petModel:SetPrimaryPartCFrame(CFrame.new(res.Position + Vector3.new(0, offset, 0)))
                petModel.PrimaryPart.Anchored = false
                setupPetBehavior(petModel)
                flashMessage("✅ Pet placed!", 2)
                conn:Disconnect()
            end
        end
    end)
end

-- Main duplication function
local function duplicatePet()
    local tool = getHeldTool()
    if not tool then
        flashMessage("❌ Hold a pet tool first!", 2)
        return
    end

    flashMessage("🔁 Duplicating...", 1)
    task.delay(1, function()
        local toolClone = tool:Clone()
        local petModel = toolClone:FindFirstChildWhichIsA("Model") or toolClone:Clone():FindFirstChildWhichIsA("Model")
        if not petModel then
            warn("No pet model in tool.")
            return
        end

        petModel.Name   = tool.Name .. "_Clone"
        petModel.Parent = workspace
        petModel:SetPrimaryPartCFrame(character:GetPrimaryPartCFrame() * CFrame.new(0, 0, -5))

        -- Re-enable any scripts
        for _, d in ipairs(petModel:GetDescendants()) do
            if d:IsA("Script") or d:IsA("LocalScript") then
                d.Disabled = false
            end
        end

        placePetOnClick(petModel)
    end)
end

-- Connect GUI
dupeButton.MouseButton1Click:Connect(duplicatePet)
