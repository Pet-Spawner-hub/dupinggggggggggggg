local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "PetDuplicationUI"
gui.Parent = player:WaitForChild("PlayerGui")

local function createButton(name, text, pos, bgColor, textColor)
    local btn = Instance.new("TextButton")
    btn.Name = name
    btn.Size = UDim2.new(0, 160, 0, 50)
    btn.Position = pos
    btn.BackgroundColor3 = bgColor
    btn.TextColor3 = textColor
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 22
    btn.Text = text
    btn.Active = true
    btn.Selectable = true
    btn.Draggable = true
    btn.Parent = gui
    return btn
end

local dupBtn = createButton("DuplicateButton", "Duplicate", UDim2.new(0.5, -80, 0.9, -25), Color3.new(0,0,0), Color3.new(1,1,1))

-- Message label for duplication status
local msg = Instance.new("TextLabel")
msg.Size = UDim2.new(0, 300, 0, 40)
msg.Position = UDim2.new(0.5, -150, 0.8, -60)
msg.BackgroundColor3 = Color3.new(0, 0, 0)
msg.TextColor3 = Color3.new(1, 1, 1)
msg.Font = Enum.Font.SourceSansBold
msg.TextSize = 20
msg.Text = ""
msg.Visible = false
msg.Parent = gui

-- Folder for fake duplicated pets
local fakeInventory = player:FindFirstChild("FakeInventory") or Instance.new("Folder")
fakeInventory.Name = "FakeInventory"
fakeInventory.Parent = player

local VisualPetClones = workspace:FindFirstChild("VisualPetClones") or Instance.new("Folder")
VisualPetClones.Name = "VisualPetClones"
VisualPetClones.Parent = workspace

-- Function to get the currently held pet Model inside tool
local function getHeldPet()
    local character = player.Character or player.CharacterAdded:Wait()
    local tool = character:FindFirstChildOfClass("Tool")
    if not tool then return nil, nil end

    -- The pet model could be a child named "Pet" or any Model inside the tool
    local pet = tool:FindFirstChild("Pet") or tool:FindFirstChildWhichIsA("Model")
    return pet, tool
end

-- Create a tool with cloned pet inside for fake inventory
local function createPetToolClone(pet)
    local newTool = Instance.new("Tool")
    newTool.Name = pet.Name .. "_Clone"
    newTool.RequiresHandle = false
    newTool.CanBeDropped = true

    local petClone = pet:Clone()
    petClone.Parent = newTool

    -- Optionally set PrimaryPart if exists
    if petClone.PrimaryPart then
        newTool.Handle = petClone.PrimaryPart
        newTool.RequiresHandle = true
    end

    newTool.Parent = fakeInventory

    -- Equip handler to parent the pet model properly
    newTool.Equipped:Connect(function()
        local character = player.Character
        if not character then return end
        petClone.Parent = character
        if petClone.PrimaryPart and character:FindFirstChild("HumanoidRootPart") then
            petClone:SetPrimaryPartCFrame(character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3))
        end
    end)

    -- Unequipped returns pet to tool
    newTool.Unequipped:Connect(function()
        petClone.Parent = newTool
    end)

    return newTool
end

-- Duplication logic for one pet
local function duplicatePetWithDelay()
    local pet, tool = getHeldPet()
    if not pet or not tool then
        warn("You must hold a pet tool to duplicate!")
        return
    end

    -- Show message
    msg.Text = "Duping in 3 minutes..."
    msg.Visible = true

    -- Start duplication countdown
    task.delay(180, function()
        -- Clone pet for visual and inventory
        local visualClone = pet:Clone()
        visualClone.Name = pet.Name .. "_VisualClone"
        visualClone.Parent = VisualPetClones

        -- Copy values like Age and Weight
        for _, attr in ipairs({"Age", "Weight"}) do
            local val = pet:FindFirstChild(attr)
            if val then
                val:Clone().Parent = visualClone
            end
        end

        -- Add to fake inventory as a Tool
        local petToolClone = createPetToolClone(pet)
        print("Pet duplicated and added to fake inventory:", petToolClone.Name)

        -- Clear message after duplication
        task.delay(3, function()
            msg.Visible = false
        end)
    end)
end

-- Connect the button click to duplication function
dupBtn.MouseButton1Click:Connect(duplicatePetWithDelay)

-- For mobile, support touch input as well
dupBtn.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        duplicatePetWithDelay()
    end
end)
